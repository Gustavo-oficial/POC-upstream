name: Sincronizar repositórios

on: 
  push: 
    branches: 
      - main
  # Você pode adicionar mais gatilhos, como eventos agendados
  # schedule: 
  #   - cron: '0 0 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do repositório de origem
      - name: Fazer checkout do repositório de origem
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 2️⃣ Enviar para o repositório do cliente
      - name: Enviar para o repositório do cliente
        env:
          CLIENT_REPO_TOKEN: ${{ secrets.CLIENT_REPO_TOKEN }} # Token do cliente
          ORIGINAL_REPO_NAME: ${{ github.event.repository.name }}
          ORG_NAME: OctusLab
        run: |
          # Configurar usuário Git
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Clonar o repositório do cliente usando HTTPS com token
          git clone https://x-access-token:$CLIENT_REPO_TOKEN@github.com/OctusLab/POC-upstream.git
          cd POC-upstream

          # Adicionar remote do repositório original
          git remote add $ORIGINAL_REPO_NAME https://x-access-token:$CLIENT_REPO_TOKEN@github.com/${ORG_NAME}/${ORIGINAL_REPO_NAME}.git

          # Buscar os commits da branch main do repositório original
          git fetch $ORIGINAL_REPO_NAME main

          # Mesclar a branch main do repositório original
          git merge $ORIGINAL_REPO_NAME/main

          # Enviar alterações para o repositório do cliente
          git push origin main --force