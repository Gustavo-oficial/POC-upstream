name: Sincronizar repositórios

on:
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório de origem
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Criando repositório no cliente se não existir
        env:
          GH_TOKEN: ${{ secrets.CLIENT_REPO_TOKEN }}
          TARGET_ORG: ${{ secrets.CLIENT_ORG_NAME }}
          TARGET_REPO: ${{ secrets.REPO_NAME }}
        run: |
          TARGET_ORG=$(echo "${TARGET_ORG}" | xargs)
          TARGET_REPO=$(echo "${TARGET_REPO}" | xargs)

          echo "Verificando se ${TARGET_ORG}/${TARGET_REPO} existe..."
          if gh repo view "${TARGET_ORG}/${TARGET_REPO}" >/dev/null 2>&1; then
            echo "✅ Repositório já existe. Pulando criação."
          else
            echo "⚡ Repositório não existe. Criando ${TARGET_ORG}/${TARGET_REPO}..."
            gh repo create "${TARGET_ORG}/${TARGET_REPO}" \
              --private \
              --description "Repositório sincronizado automaticamente"
            echo "✅ Repositório criado com sucesso."
          fi

      - name: Sincronizando repositórios
        env:
          CLIENT_REPO_TOKEN: ${{ secrets.CLIENT_REPO_TOKEN }}
          ORIGINAL_REPO_NAME: ${{ secrets.REPO_NAME }}
          ORG_NAME: ${{ secrets.MY_ORG_NAME }}
          TARGET_ORG: ${{ secrets.CLIENT_ORG_NAME }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          TARGET_ORG=$(echo "${TARGET_ORG}" | xargs)
          ORIGINAL_REPO_NAME=$(echo "${ORIGINAL_REPO_NAME}" | xargs)
          ORG_NAME=$(echo "${ORG_NAME}" | xargs)

          # Diretório seguro
          CLONE_DIR="$GITHUB_WORKSPACE/repo"
          mkdir -p "$CLONE_DIR"
          cd "$CLONE_DIR"

          REPO_FOLDER="${ORIGINAL_REPO_NAME}"

          # Clonar repositório do cliente
          GIT_URL="https://x-access-token:$CLIENT_REPO_TOKEN@github.com/${TARGET_ORG}/${ORIGINAL_REPO_NAME}.git"
          git clone "$GIT_URL" "$REPO_FOLDER"
          cd "$REPO_FOLDER"

          # Adicionar remote do repositório de origem
          git remote add origin_repo "https://x-access-token:$CLIENT_REPO_TOKEN@github.com/${ORG_NAME}/${ORIGINAL_REPO_NAME}.git"
          git fetch origin_repo main

          # Merge automático
          git merge origin_repo/main --allow-unrelated-histories -m "Merge automático" || true

          # Remover .github/workflows do cliente após o merge
          if [ -d ".github/workflows" ]; then
            echo "Removendo .github/workflows do cliente..."
            git rm -r .github/workflows
            git commit -m "Removendo workflows do cliente" || true
          fi

          # Push final para o cliente
          git push origin main --force